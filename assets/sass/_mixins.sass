//---------------------------------//
//------------- Mixin -------------//
//---------------------------------//

// --------------- Responsive - Media Queries --------------- //
=responsive($from, $size, $sizeMax:'')
  $width: (#{$from}-width: $size)
  @if $from == "min-max"
    $width: '(min-width: #{$size}) and (max-width: #{$sizeMax - 1})'
  @else if $from == "max"
    $width: (max-width: $size - 1)
  @media only screen and #{$width}
    @content

// -------------------------- Flex -------------------------- //
=space-mediaqueries
  flex-wrap: wrap
  justify-content: center

=display-flex($value:'')
  @if $value == 'important'
    display: flex !important
  @else
    display: flex

=flex-grid($mediaqueries, $space)
  @if $space == 0
    @for $i from 1 through 8
      &.#{$mediaqueries}-#{$i} > *
        max-width: #{100/$i +0%}
        flex: 0 0 #{100/$i +0%}
  @else
    @for $i from 1 through 8
      &.#{$mediaqueries}-#{$i}
        > *
          @if $i == 1
            max-width: 100%
            flex: 0 0 100%
            + *
              padding-top: $space
          @else
            max-width: calc(#{100/$i +0%} - #{$space}*0.5)
            flex: 0 0 calc(#{100/$i +0%} - #{$space}*0.5)
            &:nth-child(1n+#{$i+1})
              padding-top: $space

=center-v
  flex-wrap: wrap
  align-items: center
  +display-flex

=center-h
  flex-wrap: wrap
  justify-content: center
  +display-flex

=center
  flex-wrap: wrap
  align-items: center
  justify-content: center
  +display-flex

=flex-direction-inverse
  flex-wrap: wrap-reverse !important
  > *
    width: 100%


// ----------------------- Animation ---------------------- //
=transition($transition)
  transition: $transition


// ----------------------- Position ----------------------- //
=translate($x, $y)
  transform: translate($x, $y)

=align-middle
  position: absolute
  top: 50%
  left: 50%
  +translate(-50%, -50%)

=valign-middle
  position: absolute
  top: 50%
  +translate(0, -50%)

=halign-middle
  position: absolute
  left: 50%
  +translate(-50%, 0)

=rotate($degrees)
  transform: rotate($degrees)



// ---------------------- Style ---------------------- //
=border-radius($radius)
  border-radius: $radius

=box-shadow($properties)
  box-shadow: $properties


// ------------------------ Gradient ------------------------ //
=gradient($direction, $lightColor, $darkColor)
  background: $lightColor
  @if $direction == vertical
    background: linear-gradient(to bottom, $lightColor 0%, $darkColor 99%)
  @else if $direction == horizontal
    background: linear-gradient(to right, $lightColor 0%, $darkColor 99%)
  @else if $direction == diagonal
    background: linear-gradient(135deg, $lightColor 25%, $darkColor 99%)
  @else if $direction == radial
    background: radial-gradient(at left 25%, $lightColor 0%, $darkColor 150%)


// ------------------------ Text ------------------------ //
=fa($font-size)
  font-size: $font-size
  font-weight: 900
  font-family: "FontAwesome", serif

=ellipsis
  overflow: hidden
  text-overflow: ellipsis
  -moz-binding: url('/xml/ellipsis.xml#ellipsis')
  @-moz-document url-prefix()
    -webkit-box-orient: unset

=ellipsis-line($lines)
  +ellipsis
  $line-multiple: 1.3
  $font-size: 1em
  max-height: $font-size * $line-multiple * $lines
  line-height: $font-size * $line-multiple
  word-break: break-all
  display: -webkit-box
  -webkit-line-clamp: $lines
  -webkit-box-orient: vertical

=content-number($number, $element)
  @for $i from 1 through $number
    #{$element}:nth-of-type(#{$i})
      &:before
        content: "#{$i}"

